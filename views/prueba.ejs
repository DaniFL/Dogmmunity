<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simulaci√≥n TikTok</title>
    <style>
        body {
            margin: 0;
            overflow: hidden;
            font-family: Arial, sans-serif;
            background: black;
        }

        .container {
            height: 100vh;
            display: flex;
            flex-direction: column;
            overflow-y: scroll;
            scroll-snap-type: y mandatory;
            scroll-behavior: smooth;
        }

        .video-container {
            height: 100vh;
            width: 100%;
            scroll-snap-align: start;
            position: relative;
            background: black;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        video {
            height: 100vh;
            width: auto;
            object-fit: cover;
        }

        .controls {
            position: absolute;
            right: 20px;
            bottom: 80px;
            display: flex;
            flex-direction: column;
            align-items: center;
            z-index: 10;
        }

        .control-button {
            background: rgba(0, 0, 0, 0.6);
            color: white;
            border: none;
            border-radius: 50%;
            padding: 15px;
            margin: 10px 0;
            cursor: pointer;
            font-size: 1.5rem;
            transition: background 0.3s;
        }

        .control-button:hover {
            background: rgba(255, 255, 255, 0.8);
            color: black;
        }

        .description {
            position: absolute;
            bottom: 20px;
            left: 20px;
            color: white;
            z-index: 10;
            text-shadow: 1px 1px 5px rgba(0, 0, 0, 0.7);
            font-size: 1.2rem;
        }
    </style>
</head>

<body>
    <div class="container">
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const container = document.querySelector(".container");

            fetch("/prueba/api/videos")
                .then(response => response.json())
                .then(videoList => {
                    videoList.forEach((src, index) => {
                        const videoContainer = document.createElement("div");
                        videoContainer.className = "video-container";

                        videoContainer.innerHTML = `
                            <video src="${src}"></video>
                            <div class="controls">
                                <button class="control-button">‚ù§Ô∏è</button>
                                <button class="control-button">üí¨</button>
                                <button class="control-button">üîÑ</button>
                            </div>
                            
                        `;

                        container.appendChild(videoContainer);
                    });

                    const videoContainers = document.querySelectorAll(".video-container");
                    const totalVideos = videoContainers.length;
                    let currentIndex = 0;
                    let isScrolling = false;
                    let scrollTimeout;

                    let accumulatedDeltaY = 0;
                    const deltaThreshold = 100;

                    const scrollToVideo = (index) => {
                        if (index < 0 || index >= totalVideos) return;
                        currentIndex = index;
                        videoContainers[index].scrollIntoView({ behavior: 'smooth' });

                        if (scrollTimeout) clearTimeout(scrollTimeout);

                        scrollTimeout = setTimeout(() => {
                            isScrolling = false;
                            playVisibleVideo();
                        }, 700);
                    };

                    window.addEventListener("wheel", (e) => {
                        e.preventDefault();

                        if (isScrolling) return;

                        accumulatedDeltaY += e.deltaY;

                        if (accumulatedDeltaY > deltaThreshold) {
                            if (currentIndex < totalVideos - 1) {
                                isScrolling = true;
                                scrollToVideo(currentIndex + 1);
                                accumulatedDeltaY = 0;
                            }
                        } else if (accumulatedDeltaY < -deltaThreshold) {
                            if (currentIndex > 0) {
                                isScrolling = true;
                                scrollToVideo(currentIndex - 1);
                                accumulatedDeltaY = 0;
                            }
                        }
                    }, { passive: false });

                    let touchStartY = 0;
                    let touchEndY = 0;

                    window.addEventListener('touchstart', (e) => {
                        touchStartY = e.changedTouches[0].screenY;
                    }, { passive: true });

                    window.addEventListener('touchend', (e) => {
                        touchEndY = e.changedTouches[0].screenY;
                        handleGesture();
                    }, { passive: true });

                    const handleGesture = () => {
                        if (isScrolling) return;
                        const deltaY = touchStartY - touchEndY;
                        if (deltaY > 50) {
                            if (currentIndex < totalVideos - 1) {
                                isScrolling = true;
                                scrollToVideo(currentIndex + 1);
                            }
                        } else if (deltaY < -50) {
                            if (currentIndex > 0) {
                                isScrolling = true;
                                scrollToVideo(currentIndex - 1);
                            }
                        }
                    };

                    const playVisibleVideo = () => {
                        videoContainers.forEach((container, index) => {
                            const video = container.querySelector("video");
                            if (index === currentIndex) {
                                video.currentTime = 0;
                                video.play();
                            } else {
                                if (!video.paused) {
                                    video.pause();
                                    video.currentTime = 0;
                                }
                            }
                        });
                    };

                    playVisibleVideo();
                })
                .catch(error => console.error("Error cargando videos:", error));
        });
    </script>
</body>

</html>